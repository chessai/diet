{"status":"unsafe","types":{"268":{"15":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> b -> b) -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.ascListUnion","row":268,"col":15}},"84":{"1":{"ann":"(Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.empty","row":84,"col":1}},"370":{"49":{"ann":"((Data.Interval.Interval a), b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"_","row":370,"col":49},"53":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825964","row":370,"col":53}},"150":{"29":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":150,"col":29},"1":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.turnRed","row":150,"col":1}},"352":{"22":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":352,"col":22},"19":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":352,"col":19}},"51":{"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b, GHC.Base.Monoid b) =>\n(Data.Diet.Map.Map a b)","ident":"$cmempty","row":51,"col":3}},"73":{"48":{"ann":"a ((Data.Diet.Map.Map b c) -> (Data.Diet.Map.Map b c)) -> a (Data.Diet.Map.Map b c) -> a (Data.Diet.Map.Map b c)","ident":"_","row":73,"col":48},"7":{"ann":"(Data.Diet.Map.Map a b) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792826125","row":73,"col":7},"13":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":73,"col":13},"44":{"ann":"a -> b c","ident":"_","row":73,"col":44},"23":{"ann":"((Data.Diet.Map.Map a b) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)) -> c (Data.Diet.Map.Map a b) -> c b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":73,"col":23},"40":{"ann":"a (b -> (Data.Diet.Map.Map c b) -> (Data.Diet.Map.Map c b)) -> a b -> a (Data.Diet.Map.Map c b) -> (Data.Diet.Map.Map c b)","ident":"_","row":73,"col":40},"52":{"ann":"(a -> b c) -> (Data.Diet.Map.Map d a) -> b (Data.Diet.Map.Map d c)","ident":"_","row":73,"col":52},"27":{"ann":"(a -> b c) -> (Data.Diet.Map.Map d a) -> b (Data.Diet.Map.Map d c)","ident":"_","row":73,"col":27}},"217":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldl","row":217,"col":1},"9":{"ann":"a","ident":"z","row":217,"col":9}},"369":{"33":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825966","row":369,"col":33}},"48":{"43":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":48,"col":43},"28":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":48,"col":28},"14":{"ann":"(Data.Diet.Map.Map a b)","ident":"m2","row":48,"col":14},"19":{"ann":"x1:[((Data.Interval.Interval a), b)] -> x2:[((Data.Interval.Interval a), b)] -> {v : GHC.Types.Ordering | (v == GHC.Types.EQ <=> x1 == x2)\n                                                                                                          && (v == GHC.Types.LT <=> x1 < x2)\n                                                                                                          && (v == GHC.Types.GT <=> x1 > x2)}","ident":"_","row":48,"col":19},"11":{"ann":"(Data.Diet.Map.Map a b)","ident":"m1","row":48,"col":11},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Ord b) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> GHC.Types.Ordering","ident":"$ccompare","row":48,"col":3}},"185":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.union","row":185,"col":1},"26":{"ann":"a","ident":"v","row":185,"col":26},"9":{"ann":"((Data.Interval.Interval a) -> b -> b -> b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":185,"col":9}},"253":{"31":{"ann":"(Data.Interval.Interval a)","ident":"k","row":253,"col":31},"14":{"ann":"([((Data.Interval.Interval a), b)] -> (Data.Interval.Interval a) -> b -> [((Data.Interval.Interval a), b)]) -> [((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":253,"col":14},"29":{"ann":"[((Data.Interval.Interval a), b)]","ident":"r","row":253,"col":29},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.toDescList","row":253,"col":1},"33":{"ann":"a","ident":"v","row":253,"col":33}},"286":{"11":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":286,"col":11},"9":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826331","row":286,"col":9}},"61":{"12":{"ann":"(a -> b -> b) -> b -> (Data.Diet.Map.Map c a) -> b","ident":"_","row":61,"col":12},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(a -> b -> b) -> b -> (Data.Diet.Map.Map a a) -> b","ident":"$cfoldr","row":61,"col":3}},"294":{"30":{"ann":"{v : [GHC.Types.Char] | false} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":294,"col":30}},"96":{"38":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> (Data.Interval.Interval a)","ident":"_","row":96,"col":38}},"197":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n[(Data.Diet.Map.Map a b)] -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unions","row":197,"col":1},"10":{"ann":"(a -> a -> a) -> [(Data.Diet.Map.Map b a)] -> (Data.Diet.Map.Map b a)","ident":"_","row":197,"col":10}},"304":{"28":{"ann":"{v : [GHC.Types.Char] | false} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":304,"col":28}},"359":{"26":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"_","row":359,"col":26}},"403":{"15":{"ann":"(Data.Interval.Interval a)","ident":"k","row":403,"col":15},"19":{"ann":"(Data.Diet.Map.Map a b)","ident":"l","row":403,"col":19},"17":{"ann":"a","ident":"v","row":403,"col":17},"45":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":403,"col":45},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\nData.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.unbalancedR","row":403,"col":1},"63":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825826","row":403,"col":63},"21":{"ann":"(Data.Diet.Map.Map a b)","ident":"r","row":403,"col":21},"42":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WS","row":403,"col":42}},"124":{"19":{"ann":"{v : GHC.Types.Int | v == (2 : int)}","ident":"lq_anf$##7205759403792826149","row":124,"col":19},"29":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826151","row":124,"col":29},"35":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":124,"col":35},"1":{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"Data.Diet.Map.maxHeight","row":124,"col":1},"23":{"ann":"{v : GHC.Types.Int -> GHC.Types.Int | v == Data.Diet.Map.log2}","ident":"_","row":124,"col":23},"11":{"ann":"GHC.Types.Int","ident":"nodes","row":124,"col":11},"21":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 * x2}","ident":"_","row":124,"col":21}},"179":{"15":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":179,"col":15},"29":{"ann":"{v : (Data.Interval.Interval a) -> b -> b -> b | v == f}","ident":"_","row":179,"col":29}},"78":{"14":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"lq_anf$##7205759403792825854","row":78,"col":14},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(Data.Diet.Map.Map a b) -> [(GHC.Exts.Item (Data.Diet.Map.Map a b))]","ident":"$ctoList","row":78,"col":3}},"241":{"29":{"ann":"{v : a -> b | v == f}","ident":"_","row":241,"col":29},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a c)","ident":"Data.Diet.Map.map","row":241,"col":1},"5":{"ann":"a -> b","ident":"f","row":241,"col":5},"24":{"ann":"a","ident":"x","row":241,"col":24},"9":{"ann":"((Data.Interval.Interval a) -> b -> c) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a c)","ident":"_","row":241,"col":9}},"299":{"15":{"ann":"a","ident":"d","row":299,"col":15},"12":{"ann":"{VV : a | VV >= 0}","ident":"n","row":299,"col":12},"18":{"ann":"{VV : [((Data.Interval.Interval a), b)] | len VV <= len ls\n                                          && len VV >= 0}","ident":"xs","row":299,"col":18},"5":{"ann":"{VV : a | VV >= 0} -> b -> x3:{VV : [((Data.Interval.Interval c), d)] | len VV <= len ls\n                                                                        && len VV >= 0} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map c d) {VV : [((Data.Interval.Interval c), d)] | len VV >= 0\n                                                                                                                                                                               && len VV <= len ls\n                                                                                                                                                                               && len VV <= len x3})","ident":"buildR","row":299,"col":5}},"280":{"5":{"ann":"(GHC.Classes.Ord a, GHC.Enum.Enum a) =>\nn:{VV : GHC.Types.Int | VV == len ls\n                        && VV >= 0} -> xs:{VV : [((Data.Interval.Interval a), b)] | n == len VV\n                                                                                    && len VV <= len ls\n                                                                                    && len VV >= len ls\n                                                                                    && len VV >= 0\n                                                                                    && len VV == len ls} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) {VV : [((Data.Interval.Interval a), b)] | len VV <= len xs\n                                                                                                                                                                                                && len VV <= len ls\n                                                                                                                                                                                                && len VV >= 0})","ident":"go","row":280,"col":5},"8":{"ann":"{VV : GHC.Types.Int | VV == len ls\n                      && VV >= 0}","ident":"n","row":280,"col":8},"10":{"ann":"{VV : [((Data.Interval.Interval a), b)] | n == len VV\n                                          && len VV <= len ls\n                                          && len VV >= len ls\n                                          && len VV >= 0\n                                          && len VV == len ls}","ident":"xs","row":280,"col":10}},"309":{"30":{"ann":"{v : [GHC.Types.Char] | false} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":309,"col":30}},"156":{"10":{"ann":"x1:(Data.Interval.Interval a) -> x2:(Data.Interval.Interval a) -> {v : GHC.Types.Ordering | (v == GHC.Types.EQ <=> x1 == x2)\n                                                                                            && (v == GHC.Types.LT <=> x1 < x2)\n                                                                                            && (v == GHC.Types.GT <=> x1 > x2)}","ident":"_","row":156,"col":10}},"354":{"18":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.delete'","row":354,"col":18}},"174":{"14":{"ann":"a -> (Data.Diet.Map.Map b a)","ident":"_","row":174,"col":14},"5":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"ins","row":174,"col":5}},"112":{"5":{"ann":"a -> (Data.Diet.Map.Map b c) -> a","ident":"go","row":112,"col":5},"11":{"ann":"(Data.Diet.Map.Map a b)","ident":"q","row":112,"col":11},"9":{"ann":"a","ident":"p","row":112,"col":9}},"310":{"57":{"ann":"a","ident":"lq_anf$##7205759403792826250","row":310,"col":57},"44":{"ann":"{VV : a | VV >= 0} -> b -> x3:{VV : [((Data.Interval.Interval c), d)] | len VV <= len ls\n                                                                        && len VV >= 0} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map c d) {VV : [((Data.Interval.Interval c), d)] | len VV >= 0\n                                                                                                                                                                               && len VV <= len ls\n                                                                                                                                                                               && len VV <= len x3})","ident":"buildR","row":310,"col":44},"67":{"ann":"a","ident":"lq_anf$##7205759403792826254","row":310,"col":67},"52":{"ann":"a","ident":"lq_anf$##7205759403792826251","row":310,"col":52},"69":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 - x2}","ident":"_","row":310,"col":69},"60":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 + x2}","ident":"_","row":310,"col":60},"54":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 - x2}","ident":"_","row":310,"col":54}},"233":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> (Data.Interval.Interval a) -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldlWithKey","row":233,"col":1},"16":{"ann":"a","ident":"z","row":233,"col":16}},"28":{"5":{"ann":"(GHC.Classes.Eq b, GHC.Classes.Ord a, GHC.Enum.Enum a) =>\n{VV : [((Data.Interval.Interval a), b)] | len VV >= 0} -> [((Data.Interval.Interval a), b)]","ident":"go","row":28,"col":5}},"75":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(GHC.Exts.IsList (Data.Diet.Map.Map a b))","ident":"Data.Diet.Map.$fIsListMap","row":75,"col":10}},"31":{"61":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n[((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.collapse","row":31,"col":61},"36":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> (Data.Interval.Interval a)","ident":"_","row":31,"col":36},"30":{"ann":"(Data.Interval.Interval a)","ident":"lq_anf$##7205759403792825710","row":31,"col":30},"45":{"ann":"(Data.Interval.Interval a)","ident":"lq_anf$##7205759403792825711","row":31,"col":45},"52":{"ann":"a","ident":"lq_anf$##7205759403792825713","row":31,"col":52}},"368":{"17":{"ann":"{v : [GHC.Types.Char] | false} -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"_","row":368,"col":17},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"Data.Diet.Map.deleteMin'","row":368,"col":1}},"36":{"12":{"ann":"{v : ((Data.Interval.Interval a), b) -> ((Data.Interval.Interval a), b) -> GHC.Types.Ordering | v == go}","ident":"go","row":36,"col":12},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n[((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.sortDesc","row":36,"col":1}},"386":{"24":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":386,"col":24}},"269":{"30":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> b -> b) -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.ascListUnion","row":269,"col":30},"16":{"ann":"(Data.Interval.Interval a) -> b -> b -> b","ident":"_","row":269,"col":16}},"371":{"32":{"ann":"((Data.Interval.Interval a), b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"_","row":371,"col":32}},"353":{"19":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"_","row":353,"col":19}},"173":{"18":{"ann":"(Data.Interval.Interval a)","ident":"k","row":173,"col":18},"20":{"ann":"a","ident":"v","row":173,"col":20},"5":{"ann":"(Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b)","ident":"singletonRed","row":173,"col":5},"24":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":173,"col":24}},"317":{"15":{"ann":"{v : GHC.Types.Int | v == (0 : int)}","ident":"lq_anf$##7205759403792826174","row":317,"col":15},"25":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":317,"col":25},"31":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":317,"col":31},"1":{"ann":"GHC.Types.Int -> GHC.Types.Bool","ident":"Data.Diet.Map.isPerfect","row":317,"col":1},"23":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826172","row":317,"col":23},"18":{"ann":"GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int","ident":"_","row":317,"col":18},"16":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826173","row":317,"col":16},"11":{"ann":"GHC.Types.Int","ident":"n","row":317,"col":11}},"115":{"31":{"ann":"a -> (Data.Diet.Map.Map b c) -> a","ident":"go","row":115,"col":31},"27":{"ann":"a -> (Data.Diet.Map.Map b c) -> a","ident":"go","row":115,"col":27},"38":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 + x2}","ident":"_","row":115,"col":38}},"50":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b, GHC.Base.Monoid b) =>\n(GHC.Base.Monoid (Data.Diet.Map.Map a b))","ident":"Data.Diet.Map.$fMonoidMap","row":50,"col":10}},"234":{"37":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> (Data.Interval.Interval a) -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldlWithKey","row":234,"col":37},"56":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> (Data.Interval.Interval a) -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldlWithKey","row":234,"col":56},"53":{"ann":"a -> (Data.Interval.Interval b) -> c -> a","ident":"_","row":234,"col":53}},"101":{"36":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792825727","row":101,"col":36},"50":{"ann":"(Data.Interval.Interval a) -> a","ident":"_","row":101,"col":50},"30":{"ann":"(Data.Interval.Interval a)","ident":"x","row":101,"col":30},"39":{"ann":"(Data.Interval.Interval a) -> a","ident":"_","row":101,"col":39},"5":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> (Data.Interval.Interval a)","ident":"potentialBeyonceBetrayal","row":101,"col":5},"47":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 >= x2}","ident":"_","row":101,"col":47},"32":{"ann":"(Data.Interval.Interval a)","ident":"y","row":101,"col":32}},"303":{"28":{"ann":"[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":303,"col":28},"36":{"ann":"Data.Diet.Map.Color","ident":"lq_anf$##7205759403792826266","row":303,"col":36},"39":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826264","row":303,"col":39},"41":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":303,"col":41},"32":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":303,"col":32}},"404":{"45":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":404,"col":45},"63":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825817","row":404,"col":63},"42":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":404,"col":42}},"365":{"15":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.turnBlack","row":365,"col":15},"35":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"_","row":365,"col":35},"26":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825978","row":365,"col":26}},"246":{"5":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a c)","ident":"go","row":246,"col":5}},"44":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Eq a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(GHC.Classes.Eq (Data.Diet.Map.Map a b))","ident":"Data.Diet.Map.$fEqMap","row":44,"col":10}},"202":{"50":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"lq_anf$##7205759403792826383","row":202,"col":50},"19":{"ann":"[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b)","ident":"_","row":202,"col":19},"40":{"ann":"[((Data.Interval.Interval a), b)]","ident":"lq_anf$##7205759403792826386","row":202,"col":40},"46":{"ann":"{v : x1:{v : [{v : [((Data.Interval.Interval a), b)] | len v >= 0}] | len v >= 0} -> {v : [{v : [((Data.Interval.Interval a), b)] | len v >= 0}] | len v >= 0\n                                                                                                                                                   && len v <= len x1} | v == go}","ident":"_","row":202,"col":46}},"66":{"56":{"ann":"a -> b","ident":"_","row":66,"col":56},"70":{"ann":"(a -> b) -> (Data.Diet.Map.Map c a) -> b","ident":"_","row":66,"col":70},"46":{"ann":"a -> a -> a","ident":"_","row":66,"col":46},"60":{"ann":"a -> a -> a","ident":"_","row":66,"col":60},"32":{"ann":"(a -> b) -> (Data.Diet.Map.Map c a) -> b","ident":"_","row":66,"col":32}},"293":{"15":{"ann":"a","ident":"n'","row":293,"col":15},"26":{"ann":"{VV : a | VV /= 0\n          && VV >= 0\n          && VV > 0} -> x2:{VV : [((Data.Interval.Interval b), c)] | len VV <= len ls\n                                                                     && len VV >= 0} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map b c) {VV : [((Data.Interval.Interval b), c)] | len VV >= 0\n                                                                                                                                                                            && len VV <= len x2\n                                                                                                                                                                            && len VV <= len ls\n                                                                                                                                                                            && len VV < len x2\n                                                                                                                                                                            && len VV < len ls\n                                                                                                                                                                            && VV /= x2})","ident":"buildB","row":293,"col":26}},"392":{"40":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":392,"col":40},"20":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":392,"col":20},"5":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":392,"col":5}},"88":{"13":{"ann":"a","ident":"v","row":88,"col":13},"17":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":88,"col":17},"1":{"ann":"(Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.singleton","row":88,"col":1},"11":{"ann":"(Data.Interval.Interval a)","ident":"k","row":88,"col":11}},"399":{"26":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":399,"col":26},"5":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":399,"col":5},"8":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":399,"col":8},"42":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825809","row":399,"col":42}},"308":{"15":{"ann":"a","ident":"n'","row":308,"col":15},"37":{"ann":"a","ident":"lq_anf$##7205759403792826241","row":308,"col":37},"26":{"ann":"{VV : a | VV >= 0} -> b -> x3:{VV : [((Data.Interval.Interval c), d)] | len VV <= len ls\n                                                                        && len VV >= 0} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map c d) {VV : [((Data.Interval.Interval c), d)] | len VV >= 0\n                                                                                                                                                                               && len VV <= len ls\n                                                                                                                                                                               && len VV <= len x3})","ident":"buildR","row":308,"col":26},"39":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 - x2}","ident":"_","row":308,"col":39}},"157":{"11":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (GHC.Base.Maybe b)","ident":"Data.Diet.Map.lookup","row":157,"col":11}},"355":{"22":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":355,"col":22},"19":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":355,"col":19}},"128":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826135","row":128,"col":14},"19":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826134","row":128,"col":19},"1":{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"Data.Diet.Map.maxNodes","row":128,"col":1},"26":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":128,"col":26},"16":{"ann":"x1:GHC.Types.Int -> GHC.Types.Int -> {v : GHC.Types.Int | v == 0 <=> x1 == 0}","ident":"_","row":128,"col":16},"21":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 * x2}","ident":"_","row":128,"col":21},"10":{"ann":"GHC.Types.Int","ident":"k","row":128,"col":10}},"311":{"36":{"ann":"[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":311,"col":36},"40":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":311,"col":40}},"29":{"13":{"ann":"a","ident":"lq_anf$##7205759403792825698","row":29,"col":13},"22":{"ann":"a","ident":"lq_anf$##7205759403792825699","row":29,"col":22},"19":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":29,"col":19}},"56":{"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(a -> b) -> (Data.Diet.Map.Map a a) -> (Data.Diet.Map.Map a b)","ident":"$cfmap","row":56,"col":3},"10":{"ann":"(a -> b) -> (Data.Diet.Map.Map c a) -> (Data.Diet.Map.Map c b)","ident":"_","row":56,"col":10}},"210":{"44":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldr","row":210,"col":44},"30":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldr","row":210,"col":30},"39":{"ann":"a -> b -> b","ident":"_","row":210,"col":39}},"30":{"36":{"ann":"(Data.Interval.Interval a)","ident":"lq_anf$##7205759403792825705","row":30,"col":36},"30":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> GHC.Types.Bool","ident":"_","row":30,"col":30},"24":{"ann":"(Data.Interval.Interval a)","ident":"lq_anf$##7205759403792825704","row":30,"col":24}},"182":{"15":{"ann":"((Data.Diet.Map.Map a b) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b)) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":182,"col":15},"43":{"ann":"{v : (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) | v == f}","ident":"_","row":182,"col":43},"36":{"ann":"(Data.Interval.Interval a)","ident":"y","row":182,"col":36},"30":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825889","row":182,"col":30},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b, GHC.Base.Monoid b) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unionAppend","row":182,"col":1},"34":{"ann":"(Data.Diet.Map.Map a b)","ident":"x","row":182,"col":34},"38":{"ann":"a","ident":"z","row":182,"col":38},"32":{"ann":"(Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"f","row":182,"col":32}},"209":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldr","row":209,"col":1},"9":{"ann":"a","ident":"z","row":209,"col":9}},"276":{"14":{"ann":"xs:[((Data.Interval.Interval a), b)] -> {v : GHC.Types.Int | v >= 0\n                                                             && v == len xs}","ident":"_","row":276,"col":14},"10":{"ann":"x1:{v : GHC.Types.Int | v == len ls\n                        && v >= 0} -> x2:{v : [((Data.Interval.Interval a), b)] | x1 == len v\n                                                                                  && len v <= len ls\n                                                                                  && len v >= len ls\n                                                                                  && len v >= 0\n                                                                                  && len v == len ls} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) {v : [((Data.Interval.Interval a), b)] | len v <= len x2\n                                                                                                                                                                                            && len v <= len ls\n                                                                                                                                                                                            && len v >= 0})","ident":"_","row":276,"col":10}},"131":{"1":{"ann":"(Data.Diet.Map.Map a b) -> (GHC.Types.IO ())","ident":"Data.Diet.Map.showStats","row":131,"col":1},"11":{"ann":"(Data.Diet.Map.Map a b)","ident":"m","row":131,"col":11}},"281":{"23":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792826361","row":281,"col":23},"11":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":281,"col":11},"9":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826356","row":281,"col":9}},"284":{"15":{"ann":"{VV : [((Data.Interval.Interval a), b)] | len VV <= len ls\n                                          && len VV >= 0}","ident":"xs","row":284,"col":15},"12":{"ann":"{VV : a | VV /= 0\n          && VV >= 0\n          && VV > 0}","ident":"n","row":284,"col":12},"5":{"ann":"{VV : a | VV /= 0\n          && VV >= 0\n          && VV > 0} -> x2:{VV : [((Data.Interval.Interval b), c)] | len VV <= len ls\n                                                                     && len VV >= 0} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map b c) {VV : [((Data.Interval.Interval b), c)] | len VV >= 0\n                                                                                                                                                                            && len VV <= len x2\n                                                                                                                                                                            && len VV <= len ls\n                                                                                                                                                                            && len VV < len x2\n                                                                                                                                                                            && len VV < len ls\n                                                                                                                                                                            && VV /= x2})","ident":"buildB","row":284,"col":5}},"350":{"10":{"ann":"x1:(Data.Interval.Interval a) -> x2:(Data.Interval.Interval a) -> {v : GHC.Types.Ordering | (v == GHC.Types.EQ <=> x1 == x2)\n                                                                                            && (v == GHC.Types.LT <=> x1 < x2)\n                                                                                            && (v == GHC.Types.GT <=> x1 > x2)}","ident":"_","row":350,"col":10}},"237":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> (Data.Interval.Interval a) -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldlWithKey'","row":237,"col":1},"18":{"ann":"a","ident":"z","row":237,"col":18}},"53":{"13":{"ann":"[(Data.Diet.Map.Map a b)] -> (Data.Diet.Map.Map a b)","ident":"_","row":53,"col":13},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b, GHC.Base.Monoid b) =>\n[(Data.Diet.Map.Map a b)] -> (Data.Diet.Map.Map a b)","ident":"$cmconcat","row":53,"col":3}},"71":{"19":{"ann":"(Data.Diet.Map.Map a b) -> c (Data.Diet.Map.Map a b)","ident":"_","row":71,"col":19},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(GHC.Base.Applicative f) =>\n(a -> f b) -> (Data.Diet.Map.Map a a) -> f (Data.Diet.Map.Map a b)","ident":"$ctraverse","row":71,"col":3}},"385":{"40":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":385,"col":40},"20":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":385,"col":20},"5":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":385,"col":5}},"68":{"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Diet.Map.Map a v) -> GHC.Types.Int","ident":"$clength","row":68,"col":3}},"134":{"14":{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792826168","row":134,"col":14},"36":{"ann":"GHC.Types.Int -> [GHC.Types.Char]","ident":"_","row":134,"col":36},"3":{"ann":"(GHC.Types.IO ())","ident":"lq_anf$##7205759403792826169","row":134,"col":3},"42":{"ann":"{v : GHC.Types.Int -> GHC.Types.Int | v == Data.Diet.Map.maxHeight}","ident":"_","row":134,"col":42}},"247":{"37":{"ann":"{v : (Data.Interval.Interval a) -> b -> c | v == f}","ident":"_","row":247,"col":37},"45":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a c)","ident":"go","row":247,"col":45},"52":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a c)","ident":"go","row":247,"col":52},"27":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":247,"col":27}},"221":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldl'","row":221,"col":1},"11":{"ann":"a","ident":"z","row":221,"col":11}},"45":{"14":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":45,"col":14},"30":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":45,"col":30},"27":{"ann":"x1:[((Data.Interval.Interval a), b)] -> x2:[((Data.Interval.Interval a), b)] -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":45,"col":27},"3":{"ann":"(Data.Diet.Map.Map a b)","ident":"m1","row":45,"col":3},"6":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Eq a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> GHC.Types.Bool","ident":"$c==","row":45,"col":6},"9":{"ann":"(Data.Diet.Map.Map a b)","ident":"m2","row":45,"col":9}},"188":{"15":{"ann":"((Data.Interval.Interval a) -> b -> b -> b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":188,"col":15},"35":{"ann":"a","ident":"v2","row":188,"col":35},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(b -> b -> b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unionWith","row":188,"col":1},"41":{"ann":"{v : a -> a -> a | v == f}","ident":"_","row":188,"col":41},"11":{"ann":"a -> a -> a","ident":"f","row":188,"col":11},"32":{"ann":"a","ident":"v1","row":188,"col":32}},"67":{"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Diet.Map.Map a v) -> GHC.Types.Bool","ident":"$cnull","row":67,"col":3}},"393":{"24":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":393,"col":24}},"191":{"61":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":191,"col":61},"14":{"ann":"(Data.Interval.Interval a) -> b -> b -> b","ident":"f","row":191,"col":14},"19":{"ann":"(Data.Diet.Map.Map a b)","ident":"m2","row":191,"col":19},"45":{"ann":"((Data.Interval.Interval a) -> b -> b -> b) -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"_","row":191,"col":45},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n((Data.Interval.Interval a) -> b -> b -> b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unionWithKey","row":191,"col":1},"16":{"ann":"(Data.Diet.Map.Map a b)","ident":"m1","row":191,"col":16},"24":{"ann":"[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b)","ident":"_","row":191,"col":24},"76":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":191,"col":76}},"320":{"12":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826148","row":320,"col":12},"1":{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"Data.Diet.Map.log2","row":320,"col":1},"8":{"ann":"GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int","ident":"_","row":320,"col":8}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Diet.Map.$trModule","row":1,"col":1}},"119":{"1":{"ann":"(Data.Diet.Map.Map a b) -> GHC.Types.Int","ident":"Data.Diet.Map.height","row":119,"col":1}},"238":{"56":{"ann":"a -> (Data.Interval.Interval b) -> c -> a","ident":"_","row":238,"col":56},"59":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> (Data.Interval.Interval a) -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldlWithKey'","row":238,"col":59},"39":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> (Data.Interval.Interval a) -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldlWithKey'","row":238,"col":39}},"364":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.deleteMin","row":364,"col":1}},"18":{"13":{"ann":"(GHC.Classes.Eq Data.Diet.Map.Color)","ident":"Data.Diet.Map.$fEqColor","row":18,"col":13},"17":{"ann":"(GHC.Read.Read Data.Diet.Map.Color)","ident":"Data.Diet.Map.$fReadColor","row":18,"col":17},"23":{"ann":"(GHC.Show.Show Data.Diet.Map.Color)","ident":"Data.Diet.Map.$fShowColor","row":18,"col":23}},"361":{"36":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"_","row":361,"col":36}},"40":{"15":{"ann":"a","ident":"lq_anf$##7205759403792825688","row":40,"col":15},"13":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 > x2}","ident":"_","row":40,"col":13},"9":{"ann":"a","ident":"lq_anf$##7205759403792825687","row":40,"col":9}},"206":{"19":{"ann":"x1:{VV : [{VV : [((Data.Interval.Interval a), b)] | len VV >= 0}] | len VV >= 0} -> {VV : [{VV : [((Data.Interval.Interval a), b)] | len VV >= 0}] | len VV >= 0\n                                                                                                                                                     && len VV <= len x1}","ident":"go","row":206,"col":19},"23":{"ann":"((Data.Interval.Interval a) -> b -> b -> b) -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"_","row":206,"col":23},"40":{"ann":"a","ident":"y","row":206,"col":40},"38":{"ann":"(Data.Interval.Interval a)","ident":"x","row":206,"col":38},"47":{"ann":"a -> a -> a","ident":"_","row":206,"col":47},"42":{"ann":"a","ident":"z","row":206,"col":42},"60":{"ann":"x1:{VV : [{VV : [((Data.Interval.Interval a), b)] | len VV >= 0}] | len VV >= 0} -> {VV : [{VV : [((Data.Interval.Interval a), b)] | len VV >= 0}] | len VV >= 0\n                                                                                                                                                     && len VV <= len x1}","ident":"go","row":206,"col":60}},"62":{"12":{"ann":"(a -> b -> b) -> b -> (Data.Diet.Map.Map c a) -> b","ident":"_","row":62,"col":12},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(a -> b -> b) -> b -> (Data.Diet.Map.Map a a) -> b","ident":"$cfoldr'","row":62,"col":3}},"95":{"14":{"ann":"(Data.Interval.Interval a)","ident":"k","row":95,"col":14},"5":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Interval.Interval a)","ident":"maxUpper","row":95,"col":5}},"194":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b, GHC.Base.Monoid b) =>\n[(Data.Diet.Map.Map a b)] -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unionsAppend","row":194,"col":1},"16":{"ann":"(a -> a -> a) -> [(Data.Diet.Map.Map b a)] -> (Data.Diet.Map.Map b a)","ident":"_","row":194,"col":16}},"396":{"15":{"ann":"(Data.Interval.Interval a)","ident":"k","row":396,"col":15},"61":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825803","row":396,"col":61},"19":{"ann":"(Data.Diet.Map.Map a b)","ident":"l","row":396,"col":19},"17":{"ann":"a","ident":"v","row":396,"col":17},"45":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":396,"col":45},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\nData.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.unbalancedL","row":396,"col":1},"38":{"ann":"(Data.Diet.Map.Map a b)","ident":"r","row":396,"col":38},"42":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":396,"col":42}},"378":{"29":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":378,"col":29},"1":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.blackify","row":378,"col":1},"32":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":378,"col":32}},"158":{"11":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (GHC.Base.Maybe b)","ident":"Data.Diet.Map.lookup","row":158,"col":11}},"400":{"25":{"ann":"{v : (Data.Diet.Map.Map a b) | v == r}","ident":"r","row":400,"col":25}},"26":{"16":{"ann":"{v : [((Data.Interval.Interval a), b)] | len v >= 0} -> [((Data.Interval.Interval a), b)]","ident":"_","row":26,"col":16},"20":{"ann":"[((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"_","row":26,"col":20}},"59":{"13":{"ann":"{v : (GHC.Base.Monoid a) | v == $dMonoid_a7Pr}","ident":"$dMonoid_a7Pr","row":59,"col":13},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(GHC.Base.Monoid m) => (Data.Diet.Map.Map a m) -> m","ident":"$cfold","row":59,"col":3}},"52":{"13":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":52,"col":13},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b, GHC.Base.Monoid b) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"$cmappend","row":52,"col":3}},"214":{"47":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldr'","row":214,"col":47},"42":{"ann":"a -> b -> b","ident":"_","row":214,"col":42},"32":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldr'","row":214,"col":32}},"70":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Traversable.Traversable (Data.Diet.Map.Map a))","ident":"Data.Diet.Map.$fTraversableMap","row":70,"col":10}},"348":{"17":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792826012","row":348,"col":17},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.delete'","row":348,"col":1},"10":{"ann":"(Data.Interval.Interval a)","ident":"x","row":348,"col":10}},"250":{"28":{"ann":"(Data.Interval.Interval a)","ident":"k","row":250,"col":28},"13":{"ann":"((Data.Interval.Interval a) -> b -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]) -> [((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":250,"col":13},"30":{"ann":"a","ident":"v","row":250,"col":30},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.toAscList","row":250,"col":1},"32":{"ann":"[((Data.Interval.Interval a), b)]","ident":"r","row":250,"col":32}},"135":{"13":{"ann":"GHC.Types.Int","ident":"_","row":135,"col":13},"9":{"ann":"GHC.Types.Int","ident":"n","row":135,"col":9}},"285":{"18":{"ann":"{v : [GHC.Types.Char] | false} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":285,"col":18},"11":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 <= x2}","ident":"_","row":285,"col":11},"9":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826327","row":285,"col":9}},"373":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Diet.Map.Map a b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"Data.Diet.Map.deleteMin'","row":373,"col":10}},"168":{"12":{"ann":"a -> a -> a","ident":"f","row":168,"col":12},"45":{"ann":"{v : a -> a -> a | v == f}","ident":"_","row":168,"col":45},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> b -> b) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.insertWith","row":168,"col":1},"16":{"ann":"((Data.Interval.Interval a) -> b -> b -> b) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":168,"col":16},"34":{"ann":"a","ident":"new","row":168,"col":34},"38":{"ann":"a","ident":"old","row":168,"col":38}},"351":{"18":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.delete'","row":351,"col":18}},"171":{"15":{"ann":"(Data.Interval.Interval a) -> b -> b -> b","ident":"f","row":171,"col":15},"28":{"ann":"(Data.Diet.Map.Map a b)","ident":"mp","row":171,"col":28},"22":{"ann":"a","ident":"value","row":171,"col":22},"53":{"ann":"{v : (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) | v == ins}","ident":"_","row":171,"col":53},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> b -> b) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.insertWithKey","row":171,"col":1},"18":{"ann":"(Data.Interval.Interval a)","ident":"key","row":171,"col":18},"63":{"ann":"(Data.Interval.Interval a) -> GHC.Types.Bool","ident":"_","row":171,"col":63},"33":{"ann":"(Data.Diet.Map.Map a b) -> GHC.Types.Bool -> (Data.Diet.Map.Map a b)","ident":"_","row":171,"col":33},"42":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825785","row":171,"col":42}},"337":{"1":{"ann":"(Data.Diet.Map.ShrunkVal a b c) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unwrap'","row":337,"col":1}},"390":{"40":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":390,"col":40},"20":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":390,"col":20},"5":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":390,"col":5}},"266":{"10":{"ann":"x1:(Data.Interval.Interval a) -> x2:(Data.Interval.Interval a) -> {v : GHC.Types.Ordering | (v == GHC.Types.EQ <=> x1 == x2)\n                                                                                            && (v == GHC.Types.LT <=> x1 < x2)\n                                                                                            && (v == GHC.Types.GT <=> x1 > x2)}","ident":"_","row":266,"col":10}},"165":{"28":{"ann":"a","ident":"v","row":165,"col":28},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.insert","row":165,"col":1},"10":{"ann":"((Data.Interval.Interval a) -> b -> b -> b) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":165,"col":10}},"323":{"11":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 <= x2}","ident":"_","row":323,"col":11},"9":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826140","row":323,"col":9}},"301":{"11":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":301,"col":11},"9":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826235","row":301,"col":9}},"406":{"23":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":406,"col":23},"5":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":406,"col":5},"41":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825823","row":406,"col":41},"8":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":406,"col":8}},"345":{"28":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792826016","row":345,"col":28},"36":{"ann":"(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"_","row":345,"col":36},"12":{"ann":"(Data.Diet.Map.Map a b)","ident":"mp","row":345,"col":12},"17":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.turnBlack","row":345,"col":17},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.delete","row":345,"col":1},"8":{"ann":"(Data.Interval.Interval a)","ident":"key","row":345,"col":8}},"39":{"15":{"ann":"a","ident":"lq_anf$##7205759403792825684","row":39,"col":15},"13":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 < x2}","ident":"_","row":39,"col":13},"9":{"ann":"a","ident":"lq_anf$##7205759403792825683","row":39,"col":9}},"244":{"12":{"ann":"(Data.Interval.Interval a) -> b -> c","ident":"f","row":244,"col":12},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a c)","ident":"Data.Diet.Map.mapWithKey","row":244,"col":1},"16":{"ann":"{v : (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a c) | v == go}","ident":"go","row":244,"col":16}},"222":{"45":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldl'","row":222,"col":45},"42":{"ann":"a -> b -> a","ident":"_","row":222,"col":42},"32":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldl'","row":222,"col":32}},"200":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(b -> b -> b) -> [(Data.Diet.Map.Map a b)] -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unionsWith","row":200,"col":1}},"389":{"15":{"ann":"a","ident":"xv","row":389,"col":15},"12":{"ann":"(Data.Interval.Interval a)","ident":"xk","row":389,"col":12},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\nData.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.balanceR","row":389,"col":1},"18":{"ann":"(Data.Diet.Map.Map a b)","ident":"a","row":389,"col":18}},"64":{"12":{"ann":"(a -> b -> a) -> a -> (Data.Diet.Map.Map c b) -> a","ident":"_","row":64,"col":12},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> a -> b) -> b -> (Data.Diet.Map.Map a a) -> b","ident":"$cfoldl'","row":64,"col":3}},"291":{"18":{"ann":"x1:a -> x2:{VV : a | VV /= 0} -> {VV : a | VV == x1 / x2\n                                           && (x1 >= 0\n                                               && x2 >= 0 => VV >= 0)\n                                           && (x1 >= 0\n                                               && x2 >= 1 => VV <= x1)}","ident":"_","row":291,"col":18},"16":{"ann":"a","ident":"lq_anf$##7205759403792826334","row":291,"col":16}},"288":{"30":{"ann":"[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":288,"col":30},"34":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":288,"col":34}},"397":{"61":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825812","row":397,"col":61},"45":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":397,"col":45},"42":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WS","row":397,"col":42}},"162":{"43":{"ann":"a -> a -> a","ident":"_","row":162,"col":43},"36":{"ann":"a","ident":"y","row":162,"col":36},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b, GHC.Base.Monoid b) =>\n(Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.insertAppend","row":162,"col":1},"16":{"ann":"((Data.Interval.Interval a) -> b -> b -> b) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":162,"col":16},"34":{"ann":"a","ident":"x","row":162,"col":34},"41":{"ann":"a","ident":"_","row":162,"col":41}},"324":{"25":{"ann":"a","ident":"lq_anf$##7205759403792826144","row":324,"col":25},"35":{"ann":"a -> GHC.Types.Int -> a","ident":"_","row":324,"col":35},"27":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 + x2}","ident":"_","row":324,"col":27},"33":{"ann":"a","ident":"lq_anf$##7205759403792826146","row":324,"col":33},"21":{"ann":"a -> b -> a","ident":"go","row":324,"col":21}},"379":{"14":{"ann":"(Data.Diet.Map.Map a b)","ident":"ds_d7Yd","row":379,"col":14}},"104":{"1":{"ann":"(Data.Diet.Map.Map a b) -> GHC.Types.Bool","ident":"Data.Diet.Map.null","row":104,"col":1}},"306":{"18":{"ann":"x1:a -> x2:{VV : a | VV /= 0} -> {VV : a | VV == x1 / x2\n                                           && (x1 >= 0\n                                               && x2 >= 0 => VV >= 0)\n                                           && (x1 >= 0\n                                               && x2 >= 1 => VV <= x1)}","ident":"_","row":306,"col":18},"16":{"ann":"a","ident":"lq_anf$##7205759403792826238","row":306,"col":16}},"58":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Foldable.Foldable (Data.Diet.Map.Map a))","ident":"Data.Diet.Map.$fFoldableMap","row":58,"col":10}},"360":{"36":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"Data.Diet.Map.$WU","row":360,"col":36},"39":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":360,"col":39}},"342":{"20":{"ann":"a -> (Data.Diet.Map.ShrunkVal b c a)","ident":"_","row":342,"col":20}},"225":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldrWithKey","row":225,"col":1},"16":{"ann":"a","ident":"z","row":225,"col":16}},"63":{"12":{"ann":"(a -> b -> a) -> a -> (Data.Diet.Map.Map c b) -> a","ident":"_","row":63,"col":12},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> a -> b) -> b -> (Data.Diet.Map.Map a a) -> b","ident":"$cfoldl","row":63,"col":3}},"278":{"12":{"ann":"{v : [GHC.Types.Char] | false} -> (Data.Diet.Map.Map a b)","ident":"_","row":278,"col":12}},"296":{"36":{"ann":"[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":296,"col":36},"40":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":296,"col":40}},"132":{"14":{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792826156","row":132,"col":14},"36":{"ann":"GHC.Types.Int -> [GHC.Types.Char]","ident":"_","row":132,"col":36},"3":{"ann":"(GHC.Types.IO ())","ident":"lq_anf$##7205759403792826157","row":132,"col":3}},"282":{"23":{"ann":"GHC.Types.Int -> [((Data.Interval.Interval a), b)] -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":282,"col":23},"9":{"ann":"{v : GHC.Types.Int -> GHC.Types.Bool | v == Data.Diet.Map.isPerfect}","ident":"_","row":282,"col":9}},"80":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Show.Show a, GHC.Show.Show b, GHC.Classes.Eq b) =>\n(GHC.Show.Show (Data.Diet.Map.Map a b))","ident":"Data.Diet.Map.$fShowMap","row":80,"col":10}},"374":{"19":{"ann":"((Data.Interval.Interval a), b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"_","row":374,"col":19},"23":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":374,"col":23}},"154":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (GHC.Base.Maybe b)","ident":"Data.Diet.Map.lookup","row":154,"col":1},"9":{"ann":"(Data.Interval.Interval a)","ident":"k","row":154,"col":9}},"356":{"19":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"_","row":356,"col":19}},"176":{"12":{"ann":"x1:(Data.Interval.Interval a) -> x2:(Data.Interval.Interval a) -> {v : GHC.Types.Ordering | (v == GHC.Types.EQ <=> x1 == x2)\n                                                                                            && (v == GHC.Types.LT <=> x1 < x2)\n                                                                                            && (v == GHC.Types.GT <=> x1 > x2)}","ident":"_","row":176,"col":12}},"330":{"1":{"ann":"(Data.Diet.Map.Shrunk a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.unwrap","row":330,"col":1}},"110":{"1":{"ann":"(Data.Diet.Map.Map a b) -> GHC.Types.Int","ident":"Data.Diet.Map.size","row":110,"col":1},"8":{"ann":"GHC.Types.Int -> (Data.Diet.Map.Map a b) -> GHC.Types.Int","ident":"_","row":110,"col":8}},"55":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(GHC.Base.Functor (Data.Diet.Map.Map a))","ident":"Data.Diet.Map.$fFunctorMap","row":55,"col":10}},"213":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldr'","row":213,"col":1},"11":{"ann":"a","ident":"z","row":213,"col":11}},"77":{"14":{"ann":"[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792825796","row":77,"col":14},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n[(GHC.Exts.Item (Data.Diet.Map.Map a b))] -> (Data.Diet.Map.Map a b)","ident":"$cfromList","row":77,"col":3}},"33":{"26":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n[((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.collapse","row":33,"col":26}},"383":{"40":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":383,"col":40},"20":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":383,"col":20},"5":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":383,"col":5}},"275":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.fromDistinctAscList","row":275,"col":1},"21":{"ann":"[((Data.Interval.Interval a), b)]","ident":"ls","row":275,"col":21}},"146":{"31":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":146,"col":31},"1":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.turnBlack","row":146,"col":1}},"38":{"5":{"ann":"((Data.Interval.Interval a), b) -> ((Data.Interval.Interval a), b) -> GHC.Types.Ordering","ident":"go","row":38,"col":5},"8":{"ann":"((Data.Interval.Interval a), b)","ident":"u","row":38,"col":8},"10":{"ann":"((Data.Interval.Interval a), b)","ident":"v","row":38,"col":10}},"47":{"10":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Ord b) =>\n(GHC.Classes.Ord (Data.Diet.Map.Map a b))","ident":"Data.Diet.Map.$fOrdMap","row":47,"col":10}},"65":{"18":{"ann":"{v : (GHC.Base.Monoid a) | v == $dMonoid_a7PP}","ident":"$dMonoid_a7PP","row":65,"col":18},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(GHC.Base.Monoid m) => (a -> m) -> (Data.Diet.Map.Map a a) -> m","ident":"$cfoldMap","row":65,"col":3}},"139":{"1":{"ann":"(Data.Diet.Map.Map a b) -> GHC.Types.Bool","ident":"Data.Diet.Map.isRed","row":139,"col":1}},"92":{"15":{"ann":"(Data.Diet.Map.Map a b)","ident":"r","row":92,"col":15},"7":{"ann":"Data.Diet.Map.Color","ident":"c","row":92,"col":7},"13":{"ann":"(Data.Diet.Map.Map a b)","ident":"l","row":92,"col":13},"19":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":92,"col":19},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\nData.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.mNode","row":92,"col":1},"27":{"ann":"(Data.Interval.Interval a) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Interval.Interval a)","ident":"_","row":92,"col":27},"11":{"ann":"a","ident":"v","row":92,"col":11},"9":{"ann":"(Data.Interval.Interval a)","ident":"k","row":92,"col":9}},"289":{"30":{"ann":"{v : [GHC.Types.Char] | false} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":289,"col":30}},"267":{"15":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> b -> b) -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.ascListUnion","row":267,"col":15}},"322":{"5":{"ann":"a -> b -> a","ident":"go","row":322,"col":5},"11":{"ann":"a","ident":"q","row":322,"col":11},"9":{"ann":"a","ident":"p","row":322,"col":9}},"300":{"18":{"ann":"(Data.Diet.Map.Map a b)","ident":"lq_anf$##7205759403792826270","row":300,"col":18},"11":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":300,"col":11},"9":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826231","row":300,"col":9}},"407":{"25":{"ann":"{v : (Data.Diet.Map.Map a b) | v == r}","ident":"r","row":407,"col":25}},"120":{"31":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == (if x1 > x2 then x1 else x2)}","ident":"_","row":120,"col":31},"36":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826082","row":120,"col":36},"29":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":120,"col":29},"27":{"ann":"{v : GHC.Types.Int | v == (1 : int)}","ident":"lq_anf$##7205759403792826081","row":120,"col":27},"47":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826083","row":120,"col":47}},"218":{"30":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldl","row":218,"col":30},"39":{"ann":"a -> b -> a","ident":"_","row":218,"col":39},"42":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n(b -> c -> b) -> b -> (Data.Diet.Map.Map a c) -> b","ident":"Data.Diet.Map.foldl","row":218,"col":42}},"24":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n[((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.collapse","row":24,"col":1}},"143":{"1":{"ann":"(Data.Diet.Map.Map a b) -> GHC.Types.Bool","ident":"Data.Diet.Map.isBlack","row":143,"col":1},"11":{"ann":"(Data.Diet.Map.Map a b) -> GHC.Types.Bool","ident":"lq_anf$##7205759403792825772","row":143,"col":11}},"341":{"1":{"ann":"(Data.Diet.Map.Shrunk a b) -> c -> (Data.Diet.Map.ShrunkVal a b c)","ident":"Data.Diet.Map.annotate","row":341,"col":1},"16":{"ann":"a","ident":"x","row":341,"col":16},"20":{"ann":"a -> (Data.Diet.Map.ShrunkVal b c a)","ident":"_","row":341,"col":20}},"42":{"5":{"ann":"((Data.Interval.Interval b), a) -> b","ident":"f","row":42,"col":5},"9":{"ann":"((Data.Interval.Interval a), b) -> (Data.Interval.Interval a)","ident":"lq_anf$##7205759403792825682","row":42,"col":9}},"226":{"37":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldrWithKey","row":226,"col":37},"53":{"ann":"(Data.Interval.Interval a) -> b -> c -> c","ident":"_","row":226,"col":53},"60":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldrWithKey","row":226,"col":60}},"60":{"48":{"ann":"a -> a -> a","ident":"_","row":60,"col":48},"36":{"ann":"a -> a -> a","ident":"_","row":60,"col":36},"58":{"ann":"(Data.Diet.Map.Map a b) -> b","ident":"_","row":60,"col":58},"27":{"ann":"(Data.Diet.Map.Map a b) -> b","ident":"_","row":60,"col":27}},"204":{"5":{"ann":"x1:{VV : [{VV : [((Data.Interval.Interval a), b)] | len VV >= 0}] | len VV >= 0} -> {VV : [{VV : [((Data.Interval.Interval a), b)] | len VV >= 0}] | len VV >= 0\n                                                                                                                                                     && len VV <= len x1}","ident":"go","row":204,"col":5}},"259":{"13":{"ann":"((Data.Diet.Map.Map a b) -> ((Data.Interval.Interval a), b) -> (Data.Diet.Map.Map a b)) -> (Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b)","ident":"_","row":259,"col":13},"35":{"ann":"(Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":259,"col":35},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n[((Data.Interval.Interval a), b)] -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.fromList","row":259,"col":1},"23":{"ann":"((Data.Interval.Interval a), b)","ident":"lq_anf$##7205759403792825793","row":259,"col":23},"24":{"ann":"(Data.Diet.Map.Map a b)","ident":"m","row":259,"col":24}},"295":{"44":{"ann":"{VV : a | VV /= 0\n          && VV >= 0\n          && VV > 0} -> x2:{VV : [((Data.Interval.Interval b), c)] | len VV <= len ls\n                                                                     && len VV >= 0} -> (Data.Diet.Map.T2 (Data.Diet.Map.Map b c) {VV : [((Data.Interval.Interval b), c)] | len VV >= 0\n                                                                                                                                                                            && len VV <= len x2\n                                                                                                                                                                            && len VV <= len ls\n                                                                                                                                                                            && len VV < len x2\n                                                                                                                                                                            && len VV < len ls\n                                                                                                                                                                            && VV /= x2})","ident":"buildB","row":295,"col":44}},"97":{"38":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> (Data.Interval.Interval a)","ident":"_","row":97,"col":38}},"262":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> b -> b) -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.ascListUnion","row":262,"col":1}},"358":{"36":{"ann":"{v : (Data.Diet.Map.Map a b) | v == l}","ident":"l","row":358,"col":36},"26":{"ann":"(GHC.Classes.Eq Data.Diet.Map.Color)","ident":"Data.Diet.Map.$fEqColor","row":358,"col":26},"52":{"ann":"{v : (Data.Diet.Map.Map a b) | v == l}","ident":"l","row":358,"col":52},"21":{"ann":"{v : GHC.Types.Bool | v <=> c == Data.Diet.Map.B}","ident":"lq_anf$##7205759403792826002","row":358,"col":21},"24":{"ann":"{v : GHC.Types.Bool | v <=> c == Data.Diet.Map.B}","ident":"lq_anf$##7205759403792826001","row":358,"col":24}},"178":{"15":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":178,"col":15},"37":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"ins","row":178,"col":37}},"177":{"15":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"_","row":177,"col":15},"35":{"ann":"(Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"ins","row":177,"col":35}},"230":{"56":{"ann":"(Data.Interval.Interval a) -> b -> c -> c","ident":"_","row":230,"col":56},"39":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldrWithKey'","row":230,"col":39},"63":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldrWithKey'","row":230,"col":63}},"32":{"33":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n[((Data.Interval.Interval a), b)] -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.collapse","row":32,"col":33}},"229":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\n((Data.Interval.Interval a) -> b -> c -> c) -> c -> (Data.Diet.Map.Map a b) -> c","ident":"Data.Diet.Map.foldrWithKey'","row":229,"col":1},"18":{"ann":"a","ident":"z","row":229,"col":18}},"382":{"15":{"ann":"a","ident":"zv","row":382,"col":15},"12":{"ann":"(Data.Interval.Interval a)","ident":"zk","row":382,"col":12},"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a) =>\nData.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b)","ident":"Data.Diet.Map.balanceL","row":382,"col":1},"54":{"ann":"(Data.Diet.Map.Map a b)","ident":"d","row":382,"col":54}},"256":{"1":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Classes.Eq b) =>\n(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"Data.Diet.Map.toList","row":256,"col":1},"10":{"ann":"{v : (GHC.Classes.Eq a) | v == $dEq_a7ez}","ident":"$dEq_a7ez","row":256,"col":10}},"133":{"14":{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792826162","row":133,"col":14},"36":{"ann":"GHC.Types.Int -> [GHC.Types.Char]","ident":"_","row":133,"col":36},"3":{"ann":"(GHC.Types.IO ())","ident":"lq_anf$##7205759403792826163","row":133,"col":3},"42":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792826160","row":133,"col":42}},"98":{"52":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> (Data.Interval.Interval a)","ident":"_","row":98,"col":52},"80":{"ann":"(Data.Interval.Interval a) -> (Data.Interval.Interval a) -> (Data.Interval.Interval a)","ident":"_","row":98,"col":80}},"283":{"23":{"ann":"GHC.Types.Int -> GHC.Types.Int -> [((Data.Interval.Interval a), b)] -> (Data.Diet.Map.T2 (Data.Diet.Map.Map a b) [((Data.Interval.Interval a), b)])","ident":"_","row":283,"col":23},"33":{"ann":"{v : GHC.Types.Int -> GHC.Types.Int | v == Data.Diet.Map.log2}","ident":"_","row":283,"col":33}},"81":{"15":{"ann":"(Data.Diet.Map.Map a b)","ident":"d","row":81,"col":15},"13":{"ann":"GHC.Types.Int","ident":"n","row":81,"col":13},"72":{"ann":"(Data.Diet.Map.Map a b) -> [((Data.Interval.Interval a), b)]","ident":"_","row":81,"col":72},"19":{"ann":"{v : GHC.Types.Bool -> ([GHC.Types.Char] -> [GHC.Types.Char]) -> [GHC.Types.Char] -> [GHC.Types.Char] | v == GHC.Show.showParen}","ident":"_","row":81,"col":19},"30":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792826069","row":81,"col":30},"40":{"ann":"{v : [GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char] | v == GHC.Show.showString}","ident":"_","row":81,"col":40},"65":{"ann":"[((Data.Interval.Interval a), b)] -> [GHC.Types.Char] -> [GHC.Types.Char]","ident":"_","row":81,"col":65},"3":{"ann":"(GHC.Enum.Enum a, GHC.Classes.Ord a, GHC.Show.Show a, GHC.Show.Show b, GHC.Classes.Eq b) =>\nGHC.Types.Int -> (Data.Diet.Map.Map a b) -> [GHC.Types.Char] -> [GHC.Types.Char]","ident":"$cshowsPrec","row":81,"col":3},"32":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 > x2}","ident":"_","row":81,"col":32}},"375":{"19":{"ann":"((Data.Interval.Interval a), b) -> (Data.Diet.Map.ShrunkVal a b ((Data.Interval.Interval a), b))","ident":"_","row":375,"col":19},"29":{"ann":"Data.Diet.Map.Color -> (Data.Interval.Interval a) -> b -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Map a b) -> (Data.Diet.Map.Shrunk a b)","ident":"_","row":375,"col":29}}},"errors":[{"start":{"line":368,"column":17},"stop":{"line":368,"column":72},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Char] | v ~~ ?b\n                       && len v == strLen ?b\n                       && len v >= 0\n                       && v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : [Char] | false}\n \n  In Context\n    ?b : {?b : Addr# | ?b == \"Data.Diet.Map.deleteMin': no min in a leaf node\"}\n     \n    ?a : {?a : [Char] | ?a ~~ ?b\n                        && len ?a == strLen ?b\n                        && len ?a >= 0}"},{"start":{"line":33,"column":26},"stop":{"line":33,"column":37},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v >= 0\n                                    && v == ys}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV < len ?a\n                                     && len VV >= 0}\n \n  In Context\n    ys : {ys : [((Interval a), b)] | len ys >= 0}\n     \n    ?a : {?a : [((Interval a), b)] | len ?a >= 0}"},{"start":{"line":28,"column":5},"stop":{"line":28,"column":7},"message":"Error: Totality Error\nYour function is not total: not all patterns are defined.\nHint: Use \"--no-totality\" to deactivate totality checking."},{"start":{"line":32,"column":33},"stop":{"line":32,"column":50},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v == 1 + len ys\n                                    && tail v == ys\n                                    && head v == y\n                                    && len v >= 0\n                                    && v == ?b}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV < len ?a\n                                     && len VV >= 0}\n \n  In Context\n    ys : {ys : [((Interval a), b)] | len ys >= 0}\n     \n    ?b : {?b : [((Interval a), b)] | len ?b == 1 + len ys\n                                     && tail ?b == ys\n                                     && head ?b == y\n                                     && len ?b >= 0}\n     \n    ?a : {?a : [((Interval a), b)] | len ?a >= 0}\n     \n    y : ((Interval a), b)"},{"start":{"line":268,"column":15},"stop":{"line":268,"column":32},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v >= 0\n                                    && v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV < len ?a\n                                     && len VV >= 0}\n \n  In Context\n    ?a : {?a : [((Interval a), b)] | len ?a >= 0}"},{"start":{"line":31,"column":61},"stop":{"line":31,"column":72},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v >= 0\n                                    && v == ys}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV < len ?a\n                                     && len VV >= 0}\n \n  In Context\n    ys : {ys : [((Interval a), b)] | len ys >= 0}\n     \n    ?a : {?a : [((Interval a), b)] | len ?a >= 0}"},{"start":{"line":28,"column":5},"stop":{"line":28,"column":7},"message":"Error: Totality Error\nYour function is not total: not all patterns are defined.\nHint: Use \"--no-totality\" to deactivate totality checking."},{"start":{"line":309,"column":30},"stop":{"line":309,"column":81},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Char] | v ~~ ?a\n                       && len v == strLen ?a\n                       && len v >= 0\n                       && v == ?b}\n \n  not a subtype of Required type\n    VV : {VV : [Char] | false}\n \n  In Context\n    ?b : {?b : [Char] | ?b ~~ ?a\n                        && len ?b == strLen ?a\n                        && len ?b >= 0}\n     \n    ?a : {?a : Addr# | ?a == \"Data.Diet.Map.fromDistinctAscList: buildR n\"}"},{"start":{"line":308,"column":26},"stop":{"line":308,"column":46},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0\n                                    && v == xs\n                                    && len v == 1 + len ?a\n                                    && tail v == ?a\n                                    && head v == ?b\n                                    && v == GHC.Types.: ?b ?a\n                                    && v == ?c}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV <= len ls\n                                     && len VV >= 0\n                                     && len VV < len xs}\n \n  In Context\n    xs : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0}\n     \n    ?c : {?c : [((Interval a), b)] | len ?c <= len ls\n                                     && len ?c >= 0\n                                     && ?c == xs\n                                     && len ?c == 1 + len ?a\n                                     && tail ?c == ?a\n                                     && head ?c == ?b\n                                     && ?c == GHC.Types.: ?b ?a}\n     \n    ls : {ls : [((Interval a), b)] | len ls >= 0}\n     \n    ?b : ((Interval a), b)\n     \n    ?a : {?a : [((Interval a), b)] | len ?a >= 0}"},{"start":{"line":293,"column":26},"stop":{"line":293,"column":38},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0\n                                    && v == xs\n                                    && len v == 0\n                                    && v == GHC.Types.[]\n                                    && v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV <= len ls\n                                     && len VV >= 0\n                                     && len VV < len xs}\n \n  In Context\n    xs : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0}\n     \n    ls : {ls : [((Interval a), b)] | len ls >= 0}\n     \n    ?a : {?a : [((Interval a), b)] | len ?a <= len ls\n                                     && len ?a >= 0\n                                     && ?a == xs\n                                     && len ?a == 0\n                                     && ?a == GHC.Types.[]}"},{"start":{"line":289,"column":30},"stop":{"line":289,"column":81},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Char] | v ~~ ?b\n                       && len v == strLen ?b\n                       && len v >= 0\n                       && v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : [Char] | false}\n \n  In Context\n    ?b : {?b : Addr# | ?b == \"Data.Diet.Map.fromDistinctAscList: buildB 1\"}\n     \n    ?a : {?a : [Char] | ?a ~~ ?b\n                        && len ?a == strLen ?b\n                        && len ?a >= 0}"},{"start":{"line":309,"column":30},"stop":{"line":309,"column":81},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Char] | v ~~ ?a\n                       && len v == strLen ?a\n                       && len v >= 0\n                       && v == ?b}\n \n  not a subtype of Required type\n    VV : {VV : [Char] | false}\n \n  In Context\n    ?b : {?b : [Char] | ?b ~~ ?a\n                        && len ?b == strLen ?a\n                        && len ?b >= 0}\n     \n    ?a : {?a : Addr# | ?a == \"Data.Diet.Map.fromDistinctAscList: buildR n\"}"},{"start":{"line":308,"column":26},"stop":{"line":308,"column":46},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0\n                                    && v == xs\n                                    && len v == 0\n                                    && v == GHC.Types.[]\n                                    && v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV <= len ls\n                                     && len VV >= 0\n                                     && len VV < len xs}\n \n  In Context\n    xs : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0}\n     \n    ls : {ls : [((Interval a), b)] | len ls >= 0}\n     \n    ?a : {?a : [((Interval a), b)] | len ?a <= len ls\n                                     && len ?a >= 0\n                                     && ?a == xs\n                                     && len ?a == 0\n                                     && ?a == GHC.Types.[]}"},{"start":{"line":278,"column":12},"stop":{"line":278,"column":78},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Char] | v ~~ ?b\n                       && len v == strLen ?b\n                       && len v >= 0\n                       && v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : [Char] | false}\n \n  In Context\n    ?b : {?b : Addr# | ?b == \"Data.Diet.Map.fromDistinctAscList: list not fully consumed\"}\n     \n    ?a : {?a : [Char] | ?a ~~ ?b\n                        && len ?a == strLen ?b\n                        && len ?a >= 0}"},{"start":{"line":304,"column":28},"stop":{"line":304,"column":79},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Char] | v ~~ ?a\n                       && len v == strLen ?a\n                       && len v >= 0\n                       && v == ?b}\n \n  not a subtype of Required type\n    VV : {VV : [Char] | false}\n \n  In Context\n    ?b : {?b : [Char] | ?b ~~ ?a\n                        && len ?b == strLen ?a\n                        && len ?b >= 0}\n     \n    ?a : {?a : Addr# | ?a == \"Data.Diet.Map.fromDistinctAscList: buildR 1\"}"},{"start":{"line":202,"column":46},"stop":{"line":202,"column":69},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [{v : [((Interval a), b)] | len v >= 0}] | len v >= 0\n                                                         && len v <= len ?c\n                                                         && len v <= len ?a\n                                                         && len v <= len ?b\n                                                         && len v <= len ?e\n                                                         && len v <= len ?g\n                                                         && len v < len ?a\n                                                         && len v < len ?g\n                                                         && v == ?h}\n \n  not a subtype of Required type\n    VV : {VV : [[((Interval a), b)]] | len VV > 0}\n \n  In Context\n    m : (Map a b)\n     \n    ?g : {?g : [(Map a b)] | len ?g >= 0\n                             && ?g == ?a\n                             && len ?g == 1 + len ?e\n                             && tail ?g == ?e\n                             && head ?g == m\n                             && ?g == GHC.Types.: m ?e}\n     \n    ?f : (Map a b)\n     \n    ?c : {?c : [[((Interval a), b)]] | len ?c == len ?a\n                                       && len ?c >= 0}\n     \n    ?h : {?h : [[((Interval a), b)]] | len ?h >= 0\n                                       && len ?h <= len ?c\n                                       && len ?h <= len ?a\n                                       && len ?h <= len ?b\n                                       && len ?h <= len ?e\n                                       && len ?h <= len ?g\n                                       && len ?h < len ?a\n                                       && len ?h < len ?g}\n     \n    ?e : {?e : [(Map a b)] | len ?e >= 0}\n     \n    ?b : {?b : [(Map a b)] | len ?b >= 0\n                             && ?b == ?e\n                             && len ?b == 1 + len ?d\n                             && tail ?b == ?d\n                             && head ?b == ?f\n                             && ?b == GHC.Types.: ?f ?d}\n     \n    ?d : {?d : [(Map a b)] | len ?d >= 0}\n     \n    ?a : {?a : [(Map a b)] | len ?a >= 0}"},{"start":{"line":294,"column":30},"stop":{"line":294,"column":81},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Char] | v ~~ ?a\n                       && len v == strLen ?a\n                       && len v >= 0\n                       && v == ?b}\n \n  not a subtype of Required type\n    VV : {VV : [Char] | false}\n \n  In Context\n    ?b : {?b : [Char] | ?b ~~ ?a\n                        && len ?b == strLen ?a\n                        && len ?b >= 0}\n     \n    ?a : {?a : Addr# | ?a == \"Data.Diet.Map.fromDistinctAscList: buildB n\"}"},{"start":{"line":293,"column":26},"stop":{"line":293,"column":38},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0\n                                    && v == xs\n                                    && len v == 1 + len ?b\n                                    && tail v == ?b\n                                    && head v == ?a\n                                    && v == GHC.Types.: ?a ?b\n                                    && v == ?c}\n \n  not a subtype of Required type\n    VV : {VV : [((Interval a), b)] | len VV <= len ls\n                                     && len VV >= 0\n                                     && len VV < len xs}\n \n  In Context\n    xs : {v : [((Interval a), b)] | len v <= len ls\n                                    && len v >= 0}\n     \n    ?c : {?c : [((Interval a), b)] | len ?c <= len ls\n                                     && len ?c >= 0\n                                     && ?c == xs\n                                     && len ?c == 1 + len ?b\n                                     && tail ?c == ?b\n                                     && head ?c == ?a\n                                     && ?c == GHC.Types.: ?a ?b}\n     \n    ls : {ls : [((Interval a), b)] | len ls >= 0}\n     \n    ?b : {?b : [((Interval a), b)] | len ?b >= 0}\n     \n    ?a : ((Interval a), b)"},{"start":{"line":322,"column":5},"stop":{"line":322,"column":7},"message":"Error: Termination Error\ngo\nNo decreasing parameter"},{"start":{"line":112,"column":5},"stop":{"line":112,"column":7},"message":"Error: Termination Error\ngo\nNo decreasing parameter"},{"start":{"line":119,"column":1},"stop":{"line":119,"column":7},"message":"Error: Termination Error\nData.Diet.Map.height\nNo decreasing parameter"},{"start":{"line":348,"column":1},"stop":{"line":348,"column":8},"message":"Error: Termination Error\nData.Diet.Map.delete'\nNo decreasing parameter"},{"start":{"line":368,"column":1},"stop":{"line":368,"column":11},"message":"Error: Termination Error\nData.Diet.Map.deleteMin'\nNo decreasing parameter"},{"start":{"line":246,"column":5},"stop":{"line":246,"column":7},"message":"Error: Termination Error\ngo\nNo decreasing parameter"},{"start":{"line":237,"column":1},"stop":{"line":237,"column":14},"message":"Error: Termination Error\nData.Diet.Map.foldlWithKey'\nNo decreasing parameter"},{"start":{"line":233,"column":1},"stop":{"line":233,"column":13},"message":"Error: Termination Error\nData.Diet.Map.foldlWithKey\nNo decreasing parameter"},{"start":{"line":229,"column":1},"stop":{"line":229,"column":14},"message":"Error: Termination Error\nData.Diet.Map.foldrWithKey'\nNo decreasing parameter"},{"start":{"line":225,"column":1},"stop":{"line":225,"column":13},"message":"Error: Termination Error\nData.Diet.Map.foldrWithKey\nNo decreasing parameter"},{"start":{"line":221,"column":1},"stop":{"line":221,"column":7},"message":"Error: Termination Error\nData.Diet.Map.foldl'\nNo decreasing parameter"},{"start":{"line":217,"column":1},"stop":{"line":217,"column":6},"message":"Error: Termination Error\nData.Diet.Map.foldl\nNo decreasing parameter"},{"start":{"line":213,"column":1},"stop":{"line":213,"column":7},"message":"Error: Termination Error\nData.Diet.Map.foldr'\nNo decreasing parameter"},{"start":{"line":209,"column":1},"stop":{"line":209,"column":6},"message":"Error: Termination Error\nData.Diet.Map.foldr\nNo decreasing parameter"},{"start":{"line":154,"column":1},"stop":{"line":154,"column":7},"message":"Error: Termination Error\nData.Diet.Map.lookup\nNo decreasing parameter"},{"start":{"line":174,"column":5},"stop":{"line":174,"column":8},"message":"Error: Termination Error\nins\nNo decreasing parameter"},{"start":{"line":174,"column":5},"stop":{"line":174,"column":8},"message":"Error: Termination Error\nins\nNo decreasing parameter"}]}